# ---
# - name: Installing Mysql
#   package:
#       name: "{{item}}"
#       state: present
#       update_cache: yes
#   loop:
#     - mysql-server
#     - mysql-client
#     - python3-mysqldb
#     - libmysqlclient-dev
    
# - name: Enabling MySQL service
#   service:
#       name: mysql
#       state: started
#       enabled: yes

# - name: Setting up user-password
#   mysql_user:
#     name: root
#     password: "{{ root_password }}"
#     host: localhost
#     login_user: root
#     login_password:  "{{ root_password }}"
#     login_unix_socket: /var/run/mysqld/mysqld.sock
#     # state: present

# - name: Creating admin user (remote access)
#   mysql_user:
#     name: "{{ admin_user }}"
#     password: "{{ admin_password }}"
#     priv: '*.*:ALL'
#     host: '%'
#     append_privs: yes
#     login_user: root
#     login_password: "{{ root_password }}"
#     state: present

# - name: Creating Database 
#   mysql_db:
#     name: "{{db_name}}"
#     state: present
#     login_user: root
#     login_password: "{{ root_password }}"

# - name: Enabling remote login to mysql
#   lineinfile:
#     path: /etc/mysql/mysql.conf.d/mysqld.cnf
#     regex: '^bind-address\s*=\s*127.0.0.1'
#     line: 'bind-address = 0.0.0.0'
#     backup: yes
#   notify:
#     - Restart mysql

# - name: Execute MySQL secure installation
#   expect:
#     command: mysql_secure_installation
#     responses:
#       'Enter password for user root:': "{{ root_password }}"
#       'Press y\|Y for Yes, any other key for No': 'Y'
#       'Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG': "{{ password_validation_policy }}"
#       'Change the password for root \? \(\(Press y\|Y for Yes, any other key for No\)': 'n'
#       'Remove anonymous users\? \(Press y\|Y for Yes, any other key for No\)': 'Y'
#       'Disallow root login remotely\? \(Press y\|Y for Yes, any other key for No\)': 'Y'
#       'Remove test database and access to it\? \(Press y\|Y for Yes, any other key for No\)': 'Y'
#       'Reload privilege tables now\? \(Press y\|Y for Yes, any other key for No\)': 'Y'
#   environment:
#     MYSQL_PWD: "{{ root_password }}"

---
# tasks file for mysql-database
- name: Install Python 3
  become: true
  package:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - mysql-client
    - python3-mysqldb
    - libmysqlclient-dev
 
- name: Install MySQL
  apt:
    name: mysql-server
    state: present
  become: true
 
- name: Start MySQL service
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true
  become: true
 
- name: Remove Anonymous Users
  mysql_user:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    
- name: Ensure no user named 'db_user'@'localhost' exists, also passing in the auth credentials.
  mysql_user:
    name: mysql
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Set up MySQL root user password
  ansible.builtin.mysql_user:
    name: root
    password: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"
 
 
 
- name: Create Database
  mysql_db:
    name: "{{ mysql_db_name }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
 
- name: Create MySQL user with password with access from any host (0.0.0.0)
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_password }}"
    state: present
    host: "%"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
 
# If you want to give all priv to your database only. use priv: "{{ your_db_name }}.*:ALL,GRANT"
- name: Grant all privileges on all databases to a user from any host
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_password }}"
    priv: '*.*:ALL,GRANT'
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
